print(setdiff(correct1, correct2))
}
line_compare_test(df_correct, df_candidate, Latitude, NULL)
line_compare_test <- function(correct, candidate, col, out) {
col_name <- dplyr::enquo(col)
correct1 <- correct %>%
dplyr::mutate(Data = "Correct") %>%
dplyr::group_by(GPS, Date) %>%
dplyr::mutate(avg = mean(!!col_name)) %>%
dplyr::select(GPS, Date, Data, avg) %>%
dplyr::distinct()
correct2 <- correct %>%
dplyr::group_by(GPS, Date) %>%
dplyr::summarise(avg = mean(!!col_name)) %>%
dplyr::mutate(Data = "Correct")
print(setdiff(correct1, correct2))
}
line_compare_test(df_correct, df_candidate, Latitude, NULL)
line_compare_test <- function(correct, candidate, col, out) {
col_name <- dplyr::enquo(col)
correct1 <- correct %>%
dplyr::mutate(Data = "Correct") %>%
dplyr::group_by(GPS, Date) %>%
dplyr::mutate(avg = mean(!!col_name)) %>%
dplyr::select(GPS, Date, Data, avg) %>%
dplyr::distinct()
correct2 <- correct %>%
dplyr::group_by(GPS, Date) %>%
dplyr::summarise(avg = mean(!!col_name)) %>%
dplyr::mutate(Data = "Correct")
print(all.equal(correct1, correct2))
}
line_compare_test(df_correct, df_candidate, Latitude, NULL)
View(df_candidate)
compare_summarise_daily(df_correct, df_candidate, "inst/extdata/processed/gps_daily_arizona.csv")
#'
#'Compares two animal datasets and calculates daily summary statistics.
#'GPS, date, lat, long, course, distance, rate, elevation column names should match.
#'
#'@param correct reference df
#'@param candidate df to be compared to the reference
#'@param gps_out desired file name of .csv output summary
#'@return summary df
#'@export
#'
compare_summarise_daily <- function(correct, candidate, out) {
correct_summary <- correct %>%
summarise_anidf(NULL, Latitude, Longitude, Distance, Course, Rate, Elevation, daily=T)
print(1)
candidate_summary <- candidate %>%
summarise_anidf(NULL, Latitude, Longitude, Distance, Course, Rate, Elevation, daily=T)
print(2)
summary_all <- join_summaries(correct_summary, candidate_summary, daily=T)
print(3)
write.csv(out, summary_all)
return(summary_all)
}
compare_summarise_daily(df_correct, df_candidate, "inst/extdata/processed/gps_daily_arizona.csv")
?write.csv
#'
#'Compares two animal datasets and calculates daily summary statistics.
#'GPS, date, lat, long, course, distance, rate, elevation column names should match.
#'
#'@param correct reference df
#'@param candidate df to be compared to the reference
#'@param gps_out desired file name of .csv output summary
#'@return summary df
#'@export
#'
compare_summarise_daily <- function(correct, candidate, out) {
correct_summary <- correct %>%
summarise_anidf(NULL, Latitude, Longitude, Distance, Course, Rate, Elevation, daily=T)
candidate_summary <- candidate %>%
summarise_anidf(NULL, Latitude, Longitude, Distance, Course, Rate, Elevation, daily=T)
summary_all <- join_summaries(correct_summary, candidate_summary, daily=T)
write.csv(summary_all, out, row.names = F)
return(summary_all)
}
compare_summarise_daily(df_correct, df_candidate, "inst/extdata/processed/gps_daily_arizona.csv")
?scale_color_discrete
?IQR
?quantile
daily_summary <- compare_summarise_daily(df_correct, df_candidate, "inst/extdata/processed/gps_daily_arizona.csv")
daily_summary %>%
dplyr::filter((meanDistDiff > quantile(meanDistDiff, 0.75) + 1.5*IQR(meanDistDiff)) ||
(meanDistDiff < quantile(meanDistDiff, 0.25) - 1.5*IQR(meanDistDiff))
daily_summary %>%
dplyr::filter((meanDistDiff > quantile(meanDistDiff, 0.75) + 1.5*IQR(meanDistDiff)) ||
(meanDistDiff < quantile(meanDistDiff, 0.25) - 1.5*IQR(meanDistDiff)))
daily_summary %>%
dplyr::filter((meanCourseDiff > quantile(meanCourseDiff, 0.75) + 1.5*IQR(meanCourseDiff)) ||
(meanCourseDiff < quantile(meanCourseDiff, 0.25) - 1.5*IQR(meanCourseDiff))) %>%
dplyr::select(GPS, Date, meanCourseDiff)
IQR(daily_summary$meanCourseDiff)
quantile(daily_summary$meanCourseDiff, 0.25)
quantile(daily_summary$meanCourseDiff, 0.75)
?dplyr::filter
daily_summary %>%
dplyr::filter((meanCourseDiff > 18 ||
(meanCourseDiff < -18) %>%
dplyr::select(GPS, Date, meanCourseDiff)
daily_summary %>%
dplyr::filter((meanCourseDiff > 18 ||
(meanCourseDiff < -18) %>%
dplyr::select(GPS, Date, meanCourseDiff))
daily_summary %>%
dplyr::filter(meanCourseDiff > 18 ||
meanCourseDiff < -18) %>%
dplyr::select(GPS, Date, meanCourseDiff)
daily_summary %>%
dplyr::filter(meanCourseDiff > 18 |
meanCourseDiff < -18) %>%
dplyr::select(GPS, Date, meanCourseDiff)
?sqrt
library(animaltracker)
arizona_meta <- store_batch_list(list(datapath="inst/extdata/arizona_tocompare.zip", name="arizona_tocompare"))
source('~/animaltracker/R/data_storage.R')
arizona_meta <- store_batch_list(list(datapath="inst/extdata/arizona_tocompare.zip", name="arizona_tocompare"))
library(dplyr)
arizona_meta <- store_batch_list(list(datapath="inst/extdata/arizona_tocompare.zip", name="arizona_tocompare"))
devtools::check()
demo
?save
source('~/animaltracker/R/data_storage.R')
demo_info <- store_batch_list(list(datapath="inst/extdata/demo_aug19.zip", name="demo_aug19.zip"))
View(demo_info)
save(demo_info, file="data/demo_info.rda", compress="xz")
demo_unfiltered <- clean_batch_df(demo_info, autocleans = F, filters = F)
source('~/animaltracker/R/data_storage.R')
demo_unfiltered <- clean_batch_df(demo_info, autocleans = F, filters = F)
save(demo_unfiltered, file="data/demo_unfiltered.rda", compress="xz")
demo_filtered <- clean_batch_df(demo_info, autocleans = F, filters = T)
save(demo_filtered, file="data/demo_filtered.rda", compress="xz")
source('~/animaltracker/R/data_storage.R')
## the data were aggregated from SRTM 90 m resolution data between -60 and 60 latitude.
elev <- read_zip_to_rasters("data/elev/USA_msk_alt.zip")
library(animaltracker)
## the data were aggregated from SRTM 90 m resolution data between -60 and 60 latitude.
elev <- read_zip_to_rasters("data/elev/USA_msk_alt.zip")
source('~/animaltracker/R/data_processing.R')
## the data were aggregated from SRTM 90 m resolution data between -60 and 60 latitude.
elev <- read_zip_to_rasters("data/elev/USA_msk_alt.zip")
library(raster)
## the data were aggregated from SRTM 90 m resolution data between -60 and 60 latitude.
elev <- read_zip_to_rasters("data/elev/USA_msk_alt.zip")
demo_meta <- clean_store_batch(data_info, autocleans = F, filters = T, elev=elev, get_slope = T, get_aspect = T, min_lat = demo_info$min_lat, max_lat = demo_info$max_lat, min_long = demo_info$min_long, max_long = demo_info$max_long)
demo_meta <- clean_store_batch(demo_info, autocleans = F, filters = T, elev=elev, get_slope = T, get_aspect = T, min_lat = demo_info$min_lat, max_lat = demo_info$max_lat, min_long = demo_info$min_long, max_long = demo_info$max_long)
save(demo_meta, file="data/demo_meta.rda", compress = "xz")
demo <- get_data_from_meta(demo_meta, min_date = min(demo_meta$min_date), max_date = max(demo_meta$max_date))
View(demo)
save(demo, file="data/demo.rda", compress="xz")
View(demo_meta)
run_shiny_animaltracker()
library(animaltracker)
run_shiny_animaltracker()
library(animaltracker)
run_shiny_animaltracker()
library(animaltracker)
run_shiny_animaltracker()
View(elev)
source('~/animaltracker/R/data_storage.R')
run_shiny_animaltracker()
demo_meta <- clean_store_batch(demo_info, autocleans = F, filters = T, elev=elev, get_slope = T, get_aspect = T, min_lat = 43, max_lat = 43.5, min_long = -117.5, max_long = -117)
## the data were aggregated from SRTM 90 m resolution data between -60 and 60 latitude.
elev <- read_zip_to_rasters("inst/extdata/elev/USA_msk_alt.zip")
demo_meta <- clean_store_batch(demo_info, autocleans = F, filters = T, elev=elev, get_slope = T, get_aspect = T, min_lat = 43, max_lat = 43.5, min_long = -117.5, max_long = -117)
save(demo_meta, file="data/demo_meta.rda", compress = "xz")
demo <- get_data_from_meta(demo_meta, min_date = min(demo_meta$min_date), max_date = max(demo_meta$max_date))
save(demo, file="data/demo.rda", compress="xz")
library(animaltracker)
run_shiny_animaltracker()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
?tibble
?packageVersion("tibble")
packageVersion("tibble")
devtools::check()
library(animaltracker)
run_shiny_animaltracker()
library(animaltracker)
run_shiny_animaltracker()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()as
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
?n
?%>%
devtools::check()
?SpatialPointsDataFrame
?CRS
?SpatialPointsDataFrame
?attach
?write.csv
?quantile
?percentile
devtools::check()
?addDrawToolbar
?raster
?`projection<-`
devtools::check()
?terrain
devtools::check()
devtools::check()
devtools::check()
source('~/animaltracker/R/data_storage.R')
View(demo_info)
clean_store_batch(demo_info, autocleans=F, filters=T, elev=elev, get_slope = T, get_aspect = T, min_lat = 43.25743, max_lat, 43.5, min_long = -117.317, max_long = -117)
clean_store_batch(demo_info, autocleans=F, filters=T, elev=elev, get_slope = T, get_aspect = T, min_lat = 43.25743, max_lat = 43.5, min_long = -117.317, max_long = -117)
clean_store_batch(demo_info, autocleans=F, filters=T, elev=elev, get_slope = T, get_aspect = T, min_lat = 43.25743, max_lat = 43.5, min_long = -117.317, max_long = -117)
clean_store_batch(demo_info, autocleans=F, filters=T, elev=elev, get_slope = T, get_aspect = T, min_lat = 43.25743, max_lat = 43.5, min_long = -117.317, max_long = -117)
?summarize_unit
devtools::document()
?summarize_unit
devtools::check()
devtools::check()
View(demo)
View(demo)
View(demo)
?sample
?write.csv
?full_join
View(demo_filtered)
View(demo_unfiltered)
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
source('~/animaltracker/R/data_storage.R')
arizona_info <- store_batch_list(list(datapath="R/scratch/test_data/arizona_tocompare.zip", name="arizona_tocompare.zip"))
library(dplyr)
arizona_info <- store_batch_list(list(datapath="R/scratch/test_data/arizona_tocompare.zip", name="arizona_tocompare.zip"))
arizona_unfiltered <- clean_batch_df(arizona_info, autocleans=F, filters=F)
source('~/animaltracker/R/data_storage.R')
arizona_unfiltered <- clean_batch_df(arizona_info, autocleans=F, filters=F)
source('~/animaltracker/R/data_cleaning.R')
arizona_unfiltered <- clean_batch_df(arizona_info, autocleans=F, filters=F)
View(arizona_unfiltered)
correct <- read.csv("inst/correct.csv")
correct <- read.csv("inst/extdata/correct.csv")
View(correct)
View(arizona_unfiltered)
View(arizona_unfiltered)
correct <- correct %>% dplyr::mutate(RateFlag = 1*(RATE > 84), CourseFlag = 1*(COURSE_DIF >= 100), DistanceFlag = 1*(distancetr >= 840))
correct <- correct %>% dplyr::mutate(TotalFlags = RateFlag + CourseFlag + DistanceFlag)
View(arizona_unfiltered)
View(arizona_unfiltered)
arizona_unfiltered %>% dplyr::filter(DuplicateDateFlag == 1)
correct <- correct %>% dplyr::rename(Date = date) %>% dplyr::mutate(Date = as.Date(Date))
times <- format(strptime(correct$time, "%I:%M:%S %p"), format="%H:%M:%S")
correct$time <- format(strptime(correct$time, "%I:%M:%S %p"), format="%H:%M:%S")
str(arizona_unfiltered)
correct <- correct %>% dplyr::select(-c("TotalFlags"))
View(correct)
correct <- correct %>% dplyr::rename(Time = time) %>% dplyr::rename(Distance = distancetr) %>% dplyr::rename(Rate = RATE) %>% dplyr::rename(Slope = degreesslope)
correct <- correct %>% tibble::add_column(DateTime = NA, .after="Time") %>% DateTime = as.POSIXct(paste(Date, Time), "%Y/%m/%d %H:%M:%S", tz="UTC")
correct <- correct %>% tibble::add_column(DateTime = NA, .after="Time") %>% dplyr::mutate(DateTime = as.POSIXct(paste(Date, Time), "%Y/%m/%d %H:%M:%S", tz="UTC"))
correct <- correct %>% dplyr::mutate(DateTime = as.POSIXct(paste(Date, Time), "%Y-%m-%d %H:%M:%S", tz="UTC"))
arizona_unfiltered <- lookup_elevation(elev, arizona_unfiltered, zoom=11, get_slope = TRUE, get_aspect = FALSE)
elev <- read_zip_to_rasters("inst/extdata/elev/USA_msk_alt.zip")
arizona_unfiltered <- lookup_elevation(elev, arizona_unfiltered, zoom=11, get_slope = TRUE, get_aspect = FALSE)
arizona_compare_raw <- dplyr::full_join(correct, candidate, by=("GPS", "DateTime"))
arizona_compare_raw <- dplyr::full_join(correct, candidate, by=c("GPS", "DateTime"))
arizona_compare_raw <- dplyr::full_join(correct, arizona_candidate, by=c("GPS", "DateTime"))
arizona_compare_raw <- dplyr::full_join(correct, arizona_unfiltered, by=c("GPS", "DateTime"))
correct <- correct %>% dplyr::rename(GPS = collar)
arizona_compare_raw <- dplyr::full_join(correct, arizona_unfiltered, by=c("GPS", "DateTime"))
str(correct)
str(arizona_unfiltered)
dplyr::n(arizona_unfiltered$GPS)
arizona_unfiltered %>% dplyr::n(GPS)
arizona_unfiltered %>% dplyr::count(GPS)
gsub("(Unknown (Riggs_March_19_)(.*)(\\.csv)", "", "Unknown (Riggs_March19_99.csv)")
gsub("(Unknown (Riggs_March_19_)(.*)(\\.csv))", "", "Unknown (Riggs_March19_99.csv)")
gsub("\\(Unknown (Riggs_March_19_)(.*)(\\.csv)\\)", "", "Unknown (Riggs_March19_99.csv)")
gsub("\\(Unknown \\(Riggs_March_19_)(\\.csv)\\)", "", "Unknown (Riggs_March19_99.csv)")
gsub("(\\()(Unknown)(\\()(Riggs_March_19_)(\\.csv)(\\))", "", "Unknown (Riggs_March19_99.csv)")
gsub("Unknown \(Riggs_March19_(.*).csv\)", "\\1", "Unknown (Riggs_March19_99.csv)")
gsub(Unknown \(Riggs_March19_(.*).csv\), "\\1", "Unknown (Riggs_March19_99.csv)")
gsub("Unknown \(Riggs_March19_(.*).csv\)", "\\1", "Unknown (Riggs_March19_99.csv)")
gsub("Unknown \(\Riggs_March19_(.*).csv\)\", "\\1", "Unknown (Riggs_March19_99.csv)")
gsub("Unknown \\(Riggs_March19_(.*).csv\\)", "\\1", "Unknown (Riggs_March19_99.csv)")
arizona_unfiltered %>% dplyr::mutate(GPS = as.numeric(gsub("Unknown \\(Riggs_March19_(.*).csv\\)", "\\1", GPS)))
arizona_unfiltered <- arizona_unfiltered %>% dplyr::mutate(GPS = as.numeric(gsub("Unknown \\(Riggs_March19_(.*).csv\\)", "\\1", GPS)))
arizona_compare_raw <- dplyr::full_join(correct, arizona_unfiltered, by=c("GPS", "DateTime"))
View(arizona_compare_raw)
correct <- correct %>% dplyr::mutate(
TimeFlag = 1*(is.na(DateTime) || is.na(Date) || is.na(Time))
) %>%
tibble::add_column(DuplicateDateFlag = 1*duplicated(df$DateTime)) %>%
dplyr::mutate(TotalFlags = RateFlag + CourseFlag + DistanceFlag + TimeFlag + DuplicateDateFlag)
correct <- correct %>% dplyr::mutate(
TimeFlag = 1*(is.na(DateTime) | is.na(Date) | is.na(Time))
) %>%
tibble::add_column(DuplicateDateFlag = 1*duplicated(df$DateTime)) %>%
dplyr::mutate(TotalFlags = RateFlag + CourseFlag + DistanceFlag + TimeFlag + DuplicateDateFlag)
correct <- correct %>% dplyr::mutate(TimeFlag = 1*(is.na(DateTime) | is.na(Date) | is.na(Time))) %>%
tibble::add_column(DuplicateDateFlag = 1*duplicated(df$DateTime)) %>%
dplyr::mutate(TotalFlags = RateFlag + CourseFlag + DistanceFlag + TimeFlag + DuplicateDateFlag)
correct <- correct %>% dplyr::mutate(TimeFlag = 1*(is.na(DateTime) | is.na(Date) | is.na(Time))) %>%
tibble::add_column(DuplicateDateFlag = 1*duplicated(correct$DateTime)) %>%
dplyr::mutate(TotalFlags = RateFlag + CourseFlag + DistanceFlag + TimeFlag + DuplicateDateFlag)
compare_raw <- function(correct, candidate, out) {
comparison <- comparison %>%
dplyr::full_join(correct, candidate, by=c("GPS", "DateTime")) %>%
dplyr::select(GPS, DateTime,
Latitude.x, Latitude.y,
Longitude.x, Longitude,y,
Distance.x, Distance.y,
CourseDiff.x, CourseDiff.y,
Rate.x, Rate.y,
Elevation.x, Elevation.y,
Slope.x, Slope.y,
RateFlag.x, RateFlag.y,
CourseFlag.x, CourseFlag.y,
DistanceFlag.x, DistanceFlag.y,
TimeFlag.x, TimeFlag.x,
DuplicateDateFlag.x, DuplicateDateFlag.y,
TotalFlags.x, TotalFlags.y)
utils::write.csv(comparison, out, row.names = F)
return(comparison)
}
arizona_compare_raw <- compare_raw(correct, arizona_filtered, "inst/extdata/arizona_compare_raw.csv")
compare_raw <- function(correct, candidate, out) {
comparison <- dplyr::full_join(correct, candidate, by=c("GPS", "DateTime")) %>%
dplyr::select(GPS, DateTime,
Latitude.x, Latitude.y,
Longitude.x, Longitude,y,
Distance.x, Distance.y,
CourseDiff.x, CourseDiff.y,
Rate.x, Rate.y,
Elevation.x, Elevation.y,
Slope.x, Slope.y,
RateFlag.x, RateFlag.y,
CourseFlag.x, CourseFlag.y,
DistanceFlag.x, DistanceFlag.y,
TimeFlag.x, TimeFlag.x,
DuplicateDateFlag.x, DuplicateDateFlag.y,
TotalFlags.x, TotalFlags.y)
utils::write.csv(comparison, out, row.names = F)
return(comparison)
}
arizona_compare_raw <- compare_raw(correct, arizona_filtered, "inst/extdata/arizona_compare_raw.csv")
arizona_compare_raw <- compare_raw(correct, arizona_unfiltered, "inst/extdata/arizona_compare_raw.csv")
View(arizona_unfiltered)
View(arizona_compare_raw)
comparison <- dplyr::full_join(correct, arizona_unfiltered, by=c("GPS", "DateTime")) %>%
dplyr::select(GPS, DateTime,
Latitude.x, Latitude.y,
Longitude.x, Longitude,y,
Distance.x, Distance.y,
CourseDiff.x, CourseDiff.y,
Rate.x, Rate.y,
Elevation.x, Elevation.y,
Slope.x, Slope.y,
RateFlag.x, RateFlag.y,
CourseFlag.x, CourseFlag.y,
DistanceFlag.x, DistanceFlag.y,
TimeFlag.x, TimeFlag.x,
DuplicateDateFlag.x, DuplicateDateFlag.y,
TotalFlags.x, TotalFlags.y)
comparison <- dplyr::full_join(correct, arizona_unfiltered, by=c("GPS", "DateTime")) %>%
dplyr::select(GPS, DateTime,
Latitude.x, Latitude.y)
View(comparison)
comparison <- dplyr::full_join(correct, arizona_unfiltered, by=c("GPS", "DateTime")) %>%
dplyr::select(GPS, DateTime,
Latitude.x, Latitude.y,
Longitude.x, Longitude,y)
compare_raw <- function(correct, candidate, out) {
comparison <- dplyr::full_join(correct, candidate, by=c("GPS", "DateTime")) %>%
dplyr::select(GPS, DateTime,
Latitude.x, Latitude.y,
Longitude.x, Longitude.y,
Distance.x, Distance.y,
CourseDiff.x, CourseDiff.y,
Rate.x, Rate.y,
Elevation.x, Elevation.y,
Slope.x, Slope.y,
RateFlag.x, RateFlag.y,
CourseFlag.x, CourseFlag.y,
DistanceFlag.x, DistanceFlag.y,
TimeFlag.x, TimeFlag.x,
DuplicateDateFlag.x, DuplicateDateFlag.y,
TotalFlags.x, TotalFlags.y)
utils::write.csv(comparison, out, row.names = F)
return(comparison)
}
arizona_compare_raw <-compare_raw(correct, arizona_unfiltered, "inst/extdata/arizona_compare_raw.csv")
correct <- correct %>% dplyr::rename(CourseDiff = CourseDiff)
correct <- correct %>% dplyr::rename(CourseDiff = COURSE_DIF)
arizona_compare_raw <-compare_raw(correct, arizona_unfiltered, "inst/extdata/arizona_compare_raw.csv")
View(arizona_compare_raw)
arizona_compare_raw %>% dplyr::filter(!is.na(DateTime.y))
arizona_compare_raw %>% dplyr::filter(!is.na(Latitude.y))
arizona_compare_filter %>% dplyr::filter(!is.na(Latitude.y))
arizona_compare_filter <- arizona_compare_raw %>% dplyr::filter(!is.na(Latitude.y))
View(arizona_compare_filter)
arizona_compare_filter <- arizona_compare_raw %>% dplyr::filter(!is.na(Latitude.y), !is.na(Latitude.x))
setdiff(correct$DateTime, arizona_unfiltered$DateTime)
str(correct)
str(arizona_unfiltered)
arizona_unfiltered$GPS <- as.integer(arizona_unfiltered$GPS)
arizona_compare_raw <- dplyr::full_join(correct, arizona_unfiltered, by=c("GPS", "Date", "Time"))
View(arizona_compare_raw)
arizona_compare_raw %>% dplyr::filter(!is.na(Latitude.x), !is.na(Latitude.y))
library(dplyr)
arizona_compare_raw %>% dplyr::filter(!is.na(Latitude.x), !is.na(Latitude.y))
arizona_compare_raw <- dplyr::full_join(correct, arizona_unfiltered, by=c("GPS", "DateTime"))
arizona_compare_raw %>% dplyr::filter(!is.na(Latitude.x), !is.na(Latitude.y))
arizona_unfiltered %>% dplyr::filter(GPS==100, Date=="2018-03-02")
correct %>% dplyr::filter(GPS==100, Date=="2018-03-02")
arizona_unfiltered %>% dplyr::filter(Date >= "2018-03-05", Date <= "2018-05-26")
arizona_unfiltered <- arizona_unfiltered %>% dplyr::filter(Date >= "2018-03-05", Date <= "2018-05-26")
correct %>% dplyr::filter(GPS==100, Date=="2018-03-05")
arizona_unfiltered %>% dplyr::filter(GPS==100, Date=="2018-03-05")
correct %>% dplyr::filter(GPS==100, Date=="2018-03-05") %>% dplyr::arrange()
correct %>% dplyr::filter(GPS==100, Date=="2018-03-05") %>% dplyr::arrange(DateTime)
correct %>% dplyr::filter(GPS==100, Date=="2018-03-05") %>% dplyr::arrange(Time)
arizona_unfiltered %>% dplyr::filter(GPS==100, Date=="2018-03-05")
correct_raw <- read.csv("inst/extdata/correct.csv")
View(correct_raw)
correct_raw %>% dplyr::filter(collar==100, date="2018-03-05") %>% dplyr::arrange(time)
correct_raw %>% dplyr::filter(collar==100, date=="2018-03-05") %>% dplyr::arrange(time)
correct_raw %>% dplyr::filter(collar==100, date=="2018-03-05")
arizona_unfiltered %>% dplyr::filter(GPS==100, Date=="2018-03-05")
arizona_unfiltered %>% dplyr::filter(GPS==100, Date=="2018-03-05") %>% dplyr::arrange(Time, desc())
arizona_unfiltered %>% dplyr::filter(GPS==100, Date=="2018-03-05") %>% dplyr::arrange(desc(Time))
arizona_compare_raw <- dplyr::full_join(correct, candidate, by=c("GPS, DateTime"))
arizona_compare_raw <- dplyr::full_join(correct, arizona_unfiltered, by=c("GPS, DateTime"))
arizona_compare_raw <- dplyr::full_join(correct, arizona_unfiltered, by=c("GPS", "DateTime"))
arizona_compare_raw %>% dplyr::filter(!is.na(Latitude.x), !is.na(Latitude.y))
save(arizona_unfiltered, file="arizona_unfiltered.rda")
save(correct, file="correct.rda")
View(correct)
library(animaltracker)
run_shiny_animaltracker()
library(animaltracker)
run_shiny_animaltracker()
View(elev)
run_shiny_animaltracker()
library(animaltracker)
run_shiny_animaltracker()
devtools::install_github("mathedjoe/animaltracker", ref="dev")
run_shiny_animaltracker()
devtools::check_examples()
devtools::run_examples()
devtools::run_examples()
devtools::run_examples()
devtools::run_examples()
devtools::run_examples()
devtools::check()
devtools::run_examples()
devtools::run_examples()
demo
summarise_col(demo, Distance)
summarise_col(demo, Latitude)
summarise_col(demo, Latitude)
source('~/animaltracker/R/data_analysis.R')
summarise_col(demo, Latitude)
devtools::run_examples()
devtools::run_examples()
elevfile <- system.file("extdata/elev", "USA_msk_alt.zip", package="animaltracker")
#'elev <- read_zip_to_rasters(elevfile )
elevfile <- system.file("extdata/elev", "USA_msk_alt.zip", package="animaltracker"), elev <- read_zip_to_rasters(elevfile )
elev <- read_zip_to_rasters(elevfile )
unfiltered_elev <- lookup_elevation(elev, demo_unfiltered, zoom=11, get_slope=FALSE, get_aspect=FALSE)
filtered_elev <- lookup_elevation(elev, demo_filtered, zoom=11, get_slope=FALSE, get_aspect=FALSE)
unfiltered_summary <- summarise_anidf(unfiltered_elev, Date, Latitude, Longitude, Distance, Course, Rate, Elevation, daily=FALSE)
filtered_summary <- summarise_anidf(filtered_elev, Date, Latitude, Longitude, Distance, Course, Rate, Elevation, daily=FALSE)
summary <- join_summaries(unfiltered_summary, filtered_summary, "Date", daily=FALSE)
violin_compare(summary, Date, "Elevation", "ex_elev_violin.png")
View(summary)
View(summary)
violin_compare(summary, Date, "meanElev", "ex_elev_violin.png")
devtools::run_examples()
devtools::check()
install.packages("dplyr")
install.packages("dplyr")
devtools::check()
devtools::check()
?lookup_elevation
library(animaltracker)
?lookup_elevation
?read.csv
?write.csv
devtools::check()
?lookup_elevation
devtools::check()
devtools::check()
devtools::run_examples()
devtools::run_examples()
devtools::run_examples()
devtools::check()
